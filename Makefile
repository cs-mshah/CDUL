
help:  ## Show help
	@grep -E '^[.a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Clean autogenerated files
	rm -rf dist
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	rm -f .coverage

clean-logs: ## Clean logs
	rm -rf logs/**

sync: ## Merge changes from main branch to your current branch
	git pull
	git pull origin main

voc2012: ## download the pascal voc 2012 dataset
	python src/data/voc.py

train: ## Train the model
	python src/train.py

evaluate: ## evaluate global similarity vectors
	python src/evaluate.py evaluate.mode=global_onehot

evaluate0: ## evaluate final cache for num_patches 3 x 3 and threshold 0
	python src/evaluate.py evaluate.mode=final_onehot clip_cache.num_patches=3 clip_cache.thresh=0

evaluate1: ## evaluate final cache for num_patches 3 x 3 and threshold 0.1
	python src/evaluate.py evaluate.mode=final_onehot clip_cache.num_patches=3 clip_cache.thresh=0.1

clip_cache: ## create clip cache for global similarity vectors
	python src/clip_cache.py clip_cache.mode=global

clip_cache0: ## create clip cache for num_patches 3 x 3 and threshold 0
	python src/clip_cache.py clip_cache.mode=aggregate clip_cache.num_patches=3 clip_cache.thresh=0

clip_cache1: ## create clip cache for num_patches 3 x 3 and threshold 0.1
	python src/clip_cache.py clip_cache.mode=aggregate clip_cache.num_patches=3 clip_cache.thresh=0.1
